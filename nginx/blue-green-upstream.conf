# Nginx Blue-Green Deployment Configuration
# Dynamic upstream switching for zero-downtime deployments

# Define upstream servers for blue and green slots
upstream visionday_blue {
    server 172.20.0.11:80 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream visionday_green {
    server 172.20.0.12:80 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Dynamic upstream selection based on traffic splitting
upstream visionday_active {
    # This will be dynamically updated by the deployment script
    # Default to blue slot
    server 172.20.0.11:80 weight=100 max_fails=3 fail_timeout=30s;
    server 172.20.0.12:80 weight=0 max_fails=3 fail_timeout=30s;

    keepalive 64;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# Canary deployment upstream (for gradual rollouts)
upstream visionday_canary {
    # Primary slot (current production)
    server 172.20.0.11:80 weight=90 max_fails=3 fail_timeout=30s;
    # Canary slot (new version)
    server 172.20.0.12:80 weight=10 max_fails=3 fail_timeout=30s;

    keepalive 32;
}

# Health check upstream (always checks both slots)
upstream visionday_health {
    server 172.20.0.11:80;
    server 172.20.0.12:80 backup;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=global:10m rate=100r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=perip:10m;
limit_conn_zone $server_name zone=perserver:10m;

server {
    listen 80;
    server_name _;

    # Security headers
    include /etc/nginx/conf.d/security-headers.conf;

    # Rate limiting
    limit_req zone=global burst=20 nodelay;
    limit_conn perip 10;
    limit_conn perserver 1000;

    # Logging
    access_log /var/log/nginx/access.log combined buffer=16k flush=5s;
    error_log /var/log/nginx/error.log warn;

    # Enable real IP detection
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;

    # Add deployment info headers
    add_header X-Served-By $hostname always;
    add_header X-Cache-Status $upstream_cache_status always;

    # Health check endpoint (checks active upstream)
    location /health {
        access_log off;
        proxy_pass http://visionday_active/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Internal health check endpoint (checks specific slots)
    location /internal/health/blue {
        internal;
        proxy_pass http://visionday_blue/health;
    }

    location /internal/health/green {
        internal;
        proxy_pass http://visionday_green/health;
    }

    # Deployment info endpoint
    location /deployment-info {
        access_log off;
        default_type application/json;
        return 200 '{
            "active_slot": "$active_slot",
            "deployment_id": "$deployment_id",
            "timestamp": "$time_iso8601",
            "server": "$hostname"
        }';
    }

    # API routes with enhanced rate limiting
    location /api/ {
        limit_req zone=api burst=50 nodelay;

        # Add CORS headers for API calls
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials true always;

        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;
        }

        # Route to active upstream
        proxy_pass http://visionday_active;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;

        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 = @api_fallback;
    }

    # Authentication routes with strict rate limiting
    location /auth/ {
        limit_req zone=auth burst=10 nodelay;

        proxy_pass http://visionday_active;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Longer timeout for auth operations
        proxy_connect_timeout 15s;
        proxy_send_timeout 15s;
        proxy_read_timeout 15s;
    }

    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable, no-transform";
        add_header X-Content-Type-Options nosniff;

        # Try active upstream first, fallback to backup
        proxy_pass http://visionday_active;
        proxy_set_header Host $host;
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;

        # Error handling for static assets
        error_page 502 503 504 = @static_fallback;
    }

    # Canary deployment route (for testing new features)
    location /canary/ {
        # Remove /canary prefix
        rewrite ^/canary/(.*)$ /$1 break;

        proxy_pass http://visionday_canary;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Canary-Request "1";
    }

    # Blue slot direct access (for testing)
    location /blue/ {
        # Remove /blue prefix
        rewrite ^/blue/(.*)$ /$1 break;

        proxy_pass http://visionday_blue;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Direct-Slot "blue";
    }

    # Green slot direct access (for testing)
    location /green/ {
        # Remove /green prefix
        rewrite ^/green/(.*)$ /$1 break;

        proxy_pass http://visionday_green;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Direct-Slot "green";
    }

    # Main application routes
    location / {
        # Try to serve static files first, then proxy to application
        try_files $uri @application;
    }

    location @application {
        # Route to active upstream
        proxy_pass http://visionday_active;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support (for hot reloading in development)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 16k;
        proxy_buffers 32 16k;
        proxy_busy_buffers_size 32k;

        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 = @application_fallback;
    }

    # Fallback locations for error handling
    location @api_fallback {
        internal;
        default_type application/json;
        return 503 '{"error":"Service temporarily unavailable","code":503,"timestamp":"$time_iso8601"}';
    }

    location @static_fallback {
        internal;
        return 503 "Service temporarily unavailable";
    }

    location @application_fallback {
        internal;
        root /usr/share/nginx/html;
        try_files /maintenance.html =503;
    }

    # Block common exploit attempts
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* \.(php|asp|aspx|jsp|pl|py|sh|cgi)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# HTTPS server configuration
server {
    listen 443 ssl http2;
    server_name _;

    # SSL configuration
    ssl_certificate /etc/ssl/certs/visionday.crt;
    ssl_certificate_key /etc/ssl/private/visionday.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers for HTTPS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Include HTTP configuration
    include /etc/nginx/conf.d/security-headers.conf;

    # Same location blocks as HTTP server but with HTTPS context
    # [Include all location blocks from HTTP server here]
}

# Map for connection upgrade (WebSocket support)
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Map for CORS origin
map $http_origin $cors_origin {
    default "";
    "~^https?://localhost(:[0-9]+)?$" $http_origin;
    "~^https://(.+\.)?visionday\.app$" $http_origin;
}

# Log format for blue-green deployment tracking
log_format blue_green_tracking '$remote_addr - $remote_user [$time_local] '
                               '"$request" $status $bytes_sent '
                               '"$http_referer" "$http_user_agent" '
                               'upstream_addr="$upstream_addr" '
                               'upstream_status="$upstream_status" '
                               'upstream_response_time="$upstream_response_time" '
                               'active_slot="$active_slot" '
                               'deployment_id="$deployment_id"';